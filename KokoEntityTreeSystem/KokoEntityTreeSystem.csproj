<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>net7.0</TargetFramework>
    <ImplicitUsings>enable</ImplicitUsings>
    <Nullable>enable</Nullable>
    <OutputType>Library</OutputType>
    <GeneratePackageOnBuild>True</GeneratePackageOnBuild>
    <Title>Entity_Tree_Observer</Title>
    <Description>
      This code implements architecture that handles search for game engines. It has four main classes: Entity, EntityFactory, EntityTree, and EntityTreeManager.

      Entity is the basic structure of an entity that has an identifier and a list of observers notified when the entity is destroyed.

      EntityFactory creates and destroys entities and adds entities to trees managed by EntityTreeManager.

      EntityTree is a generic tree structure that stores entities and notifies observers when an entity is destroyed.

      EntityTreeManager manages a collection of trees, allows adding and removing trees, and enables adding entities to one or more trees and registering the trees as observers of the entities.
    </Description>
    <PackageProjectUrl>https://github.com/bloxxyyy/Koko_TreeAbleEntitySystem</PackageProjectUrl>
    <RepositoryUrl>https://github.com/bloxxyyy/Koko_TreeAbleEntitySystem</RepositoryUrl>
    <PackageTags>ECS</PackageTags>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.NET.Test.Sdk" Version="16.7.1" />
    <PackageReference Include="xunit" Version="2.4.2" />
    <PackageReference Include="xunit.runner.visualstudio" Version="2.4.3">
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
      <PrivateAssets>all</PrivateAssets>
    </PackageReference>
    <PackageReference Include="coverlet.collector" Version="1.3.0">
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
      <PrivateAssets>all</PrivateAssets>
    </PackageReference>
  </ItemGroup>

</Project>
